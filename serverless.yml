service: serverless-flask

package:
  individually: true
  exclude:
    - "**"

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-prune-plugin

provider:
  region: us-east-2
  name: aws
  architecture: x86_64
  runtime: python3.11
  deploymentBucket:
    name: ${ssm:/serverless/deployment-bucket-id}
    serverSideEncryption: AES256
  apiGateway:
    restApiId: ${ssm:/python-cognito/api-gateway/rest-api-id}
    restApiRootResourceId: ${ssm:/python-cognito/api-gateway/root-resource-id}

functions:
  app:
    role: ${ssm:/python-cognito/lambda-iam-role/arn}
    handler: wsgi_handler.handler
    package: 
      include:
        - "src/app.py"
        - "src/config.py"
        - "src/keys.py"
        - "src/templates/**"
    timeout: 30
    events:
      - http: ANY /
      - http: "ANY /{proxy+}"
    environment:
      SECRET_KEY: ${ssm:/python-cognito/flask-secret}
      JWT_PRIVATE_KEY: ${ssm:/python-cognito/jwt-private-key}
      JWT_SECRET_KEY: ${ssm:/python-cognito/jwt-secret}
      AWS_COGNITO_DOMAIN: ${ssm:/python-cognito/cognito-domain}
      AWS_COGNITO_USER_POOL_ID: ${ssm:/python-cognito/user-pool-id}
      AWS_COGNITO_USER_POOL_CLIENT_ID: ${ssm:/python-cognito/user-pool-client-id}
      AWS_COGNITO_USER_POOL_CLIENT_SECRET: ${ssm:/python-cognito/user-pool-client-secret}
      SITE_URL: ${ssm:/python-cognito/api-gateway/url}

custom:
  pythonRequirements:
    dockerizePip: non-linux
    usePoetry: false
  wsgi:
    app: src.app.app
    packRequirements: false
  prune:
    automatic: true
    number: 3
